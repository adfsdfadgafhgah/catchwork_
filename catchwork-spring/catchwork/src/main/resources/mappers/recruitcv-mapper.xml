<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper
	namespace="com.example.demo.corp.recruit.model.mapper.RecruitCVMapper">

	<!-- resultMap 정의 -->
	<resultMap id="recruitCVMap"
		type="com.example.demo.corp.recruit.model.dto.RecruitCV">
		<id property="recruitCVNo" column="recruit_cv_no" />
		<result property="recruitCVEdu" column="recruit_cv_edu" />
		<result property="recruitCVCareer" column="recruit_cv_career" />
		<result property="recruitCVPdfTitle"
			column="recruit_cv_pdf_title" />
			<result property="recruitCVPdfPath" column="recruit_cv_pdf_path" />
		<result property="recruitCVDate" column="recruit_cv_date" />
		<result property="recruitCVCheckFl"
			column="recruit_cv_check_fl" />
		<result property="memNo" column="mem_no" />
		<result property="recruitNo" column="recruit_no" />
		<result property="recruitTitle" column="recruit_title" />
	</resultMap>

	<!-- 회원의 역할 조회 -->
<select id="getCorpRoleByMemNo" resultType="String">
    SELECT CORP_MEM_ROLE_CHECK FROM CORP_MEM WHERE MEM_NO = #{memNo}
</select>

<!-- 소속 기업 번호 조회 -->
<select id="getCorpNoByMemNo" resultType="int">
    SELECT CORP_NO FROM CORP_MEM WHERE MEM_NO = #{memNo}
</select>

<!-- 기업 대표 → 회사 전체 이력서 -->
<select id="getCVListByCorpNo" resultMap="recruitCVMap">
    SELECT RC.RECRUIT_CV_NO, RC.RECRUIT_CV_EDU, RC.RECRUIT_CV_CAREER,
           RC.RECRUIT_CV_PDF_TITLE, RC.RECRUIT_CV_PDF_PATH, RC.RECRUIT_CV_DATE, RC.RECRUIT_CV_CHECK_FL,
           RC.MEM_NO, RC.RECRUIT_NO, R.RECRUIT_TITLE
    FROM RECRUIT_CV RC
    JOIN RECRUIT R ON RC.RECRUIT_NO = R.RECRUIT_NO
    JOIN CORP_MEM CM ON R.MEM_NO = CM.MEM_NO
    WHERE CM.CORP_NO = #{corpNo}
    ORDER BY RC.RECRUIT_CV_NO DESC
</select>


<!-- 일반 사원 → 내가 작성한 공고의 이력서 -->
<select id="getCVListByWriter" resultMap="recruitCVMap">
    SELECT RC.RECRUIT_CV_NO, RC.RECRUIT_CV_EDU, RC.RECRUIT_CV_CAREER,
           RC.RECRUIT_CV_PDF_TITLE,RC.RECRUIT_CV_PDF_PATH,RC.RECRUIT_CV_DATE, RC.RECRUIT_CV_CHECK_FL,
           RC.MEM_NO, RC.RECRUIT_NO, R.RECRUIT_TITLE
    FROM RECRUIT_CV RC
    JOIN RECRUIT R ON RC.RECRUIT_NO = R.RECRUIT_NO
    WHERE R.MEM_NO = #{memNo}
    ORDER BY RC.RECRUIT_CV_NO DESC
</select>

	<!-- 필터링 (학력, 경력) -->
	<select id="getCVList" resultMap="recruitCVMap">
    SELECT
        RC.RECRUIT_CV_NO,
        RC.RECRUIT_CV_EDU,
        RC.RECRUIT_CV_CAREER,
        RC.RECRUIT_CV_PDF_TITLE,
        RC.RECRUIT_CV_PDF_PATH,
        RC.RECRUIT_CV_DATE,
        RC.RECRUIT_CV_CHECK_FL,
        RC.MEM_NO,
        RC.RECRUIT_NO,
        R.RECRUIT_TITLE
    FROM RECRUIT_CV RC
    JOIN RECRUIT R ON RC.RECRUIT_NO = R.RECRUIT_NO
    JOIN CORP_MEM CM ON R.MEM_NO = CM.MEM_NO
    JOIN CORP_INFO CI ON CM.CORP_NO = CI.CORP_NO
    <trim prefix="WHERE" prefixOverrides="AND |OR ">
        <if test="corpNo != null">
            AND CI.CORP_NO = #{corpNo}
        </if>
        <if test="recruitCVEdu != null">
            AND RC.RECRUIT_CV_EDU = #{recruitCVEdu}
        </if>
        <if test="careerMin != null and careerMax != null">
            AND RC.RECRUIT_CV_CAREER BETWEEN #{careerMin} AND #{careerMax}
        </if>
    </trim>
    ORDER BY R.RECRUIT_TITLE ASC
</select>


	<!-- 경로 저장 -->
	<select id="selectCVPDFPath" resultType="String"
		parameterType="int">
		SELECT RECRUIT_CV_PDF_PATH
		FROM RECRUIT_CV
		WHERE
		RECRUIT_CV_NO = #{cvNo}
	</select>

	<!-- 이력서 PDF 다운로드 체크 -->
	<update id="updateCVCheckFlag">
		UPDATE RECRUIT_CV
		SET RECRUIT_CV_CHECK_FL = 'Y'
		WHERE RECRUIT_CV_NO = #{cvNo}
	</update>

	<!-- 이력서 여러개 삭제 -->
	<delete id="deleteCVs" parameterType="list">
		DELETE FROM RECRUIT_CV
		WHERE RECRUIT_CV_NO IN
		<foreach item="no" collection="cvNos" open="(" separator=","
			close=")">
			#{no}
		</foreach>
	</delete>



</mapper>
