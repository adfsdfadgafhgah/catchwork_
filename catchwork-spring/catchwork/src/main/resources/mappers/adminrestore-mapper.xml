<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.admin.model.mapper.AdminRestoreMapper">
	
	<!-- 복구 대상 리스트 조회 -->
	<select id="selectRestoreList"
		resultType="com.example.demo.admin.model.dto.AdminRestore">
		<choose>

			<!-- 일반 및 기업 회원 -->
			<when test="category == 'MEMBER'">
				SELECT 'MEMBER' AS targetType,
				M.MEM_NO AS targetNo,
				M.MEM_NICKNAME AS title,
				M.MEM_NAME AS content
				FROM MEMBER M
				WHERE M.MEM_STATUS = 1
				AND (M.MEM_NICKNAME LIKE '%' || #{keyword} || '%' OR M.MEM_NAME LIKE
				'%' || #{keyword} || '%')
				ORDER BY M.MEM_NO DESC
				OFFSET #{startRow} ROWS FETCH NEXT #{fetchCount} ROWS ONLY
			</when>

			<!-- 회사 정보 -->
			<when test="category == 'COMPANY'">
				SELECT 'COMPANY' AS targetType,
				C.CORP_NO AS targetNo,
				C.CORP_NAME AS title,
				NULL AS content
				FROM CORP_INFO C
				WHERE C.CORP_STATUS = 1
				AND C.CORP_NAME LIKE '%' || #{keyword} || '%'
				ORDER BY C.CORP_NO DESC
				OFFSET #{startRow} ROWS FETCH NEXT #{fetchCount} ROWS ONLY
			</when>

			<!-- 채용 공고 -->
			<when test="category == 'RECRUIT'">
				SELECT 'RECRUIT' AS targetType,
				R.RECRUIT_NO AS targetNo,
				R.RECRUIT_TITLE AS title,
				M.MEM_NAME AS content
				FROM RECRUIT R
				JOIN MEMBER M ON R.MEM_NO = M.MEM_NO
				WHERE R.RECRUIT_STATUS = 1
				AND R.RECRUIT_TITLE LIKE '%' || #{keyword} || '%'
				ORDER BY R.RECRUIT_NO DESC
				OFFSET #{startRow} ROWS FETCH NEXT #{fetchCount} ROWS ONLY
			</when>

			<!-- 게시글 -->
			<when test="category == 'BOARD'">
				SELECT 'BOARD' AS targetType,
				B.BOARD_NO AS targetNo,
				B.BOARD_TITLE AS title,
				M.MEM_NICKNAME AS content
				FROM BOARD B
				JOIN MEMBER M ON B.MEM_NO = M.MEM_NO
				WHERE B.BOARD_STATUS = 1
				AND B.BOARD_TITLE LIKE '%' || #{keyword} || '%'
				ORDER BY B.BOARD_NO DESC
				OFFSET #{startRow} ROWS FETCH NEXT #{fetchCount} ROWS ONLY
			</when>

			<!-- 댓글 -->
			<when test="category == 'COMMENT'">
				SELECT 'COMMENT' AS targetType,
				C.COMMENT_NO AS targetNo,
				C.COMMENT_CONTENT AS title,
				M.MEM_NICKNAME AS content
				FROM "COMMENT" C
				JOIN MEMBER M ON C.MEM_NO = M.MEM_NO
				WHERE C.COMMENT_STATUS = 1
				AND C.COMMENT_CONTENT LIKE '%' || #{keyword} || '%'
				ORDER BY C.COMMENT_NO DESC
				OFFSET #{startRow} ROWS FETCH NEXT #{fetchCount} ROWS ONLY
			</when>

			<otherwise>
				SELECT NULL AS targetType,
				NULL AS targetNo,
				NULL AS title,
				NULL AS content
				FROM DUAL WHERE 1=0
			</otherwise>

		</choose>
	</select>

	<!-- 복구 대상 총 개수 조회 -->
	<select id="getRestoreListCount" resultType="int">
		<choose>

			<when test="category == 'MEMBER'">
				SELECT COUNT(*) FROM MEMBER
				WHERE MEM_STATUS = 1
				AND (MEM_NICKNAME LIKE '%' || #{keyword} || '%' OR MEM_NAME LIKE '%' ||
				#{keyword} || '%')
			</when>

			<when test="category == 'COMPANY'">
				SELECT COUNT(*) FROM CORP_INFO
				WHERE CORP_STATUS = 1
				AND CORP_NAME LIKE '%' || #{keyword} || '%'
			</when>

			<when test="category == 'RECRUIT'">
				SELECT COUNT(*) FROM RECRUIT
				WHERE RECRUIT_STATUS = 1
				AND RECRUIT_TITLE LIKE '%' || #{keyword} || '%'
			</when>

			<when test="category == 'BOARD'">
				SELECT COUNT(*) FROM BOARD
				WHERE BOARD_STATUS = 1
				AND BOARD_TITLE LIKE '%' || #{keyword} || '%'
			</when>

			<when test="category == 'COMMENT'">
				SELECT COUNT(*) FROM "COMMENT"
				WHERE COMMENT_STATUS = 1
				AND COMMENT_CONTENT LIKE '%' || #{keyword} || '%'
			</when>

			<otherwise>
				SELECT 0 FROM DUAL
			</otherwise>

		</choose>
	</select>

	<!-- 복구 처리 (_STATUS → 0) -->
	<update id="restoreTarget"
		parameterType="com.example.demo.admin.model.dto.AdminRestore">
		<choose>
			<when test="targetType == 'MEMBER'">
				UPDATE MEMBER
				SET MEM_STATUS = 0
				WHERE MEM_NO = #{targetNo}
			</when>
			<when test="targetType == 'COMPANY'">
				UPDATE CORP_INFO
				SET CORP_STATUS = 0
				WHERE CORP_NO = #{targetNo}
			</when>
			<when test="targetType == 'RECRUIT'">
				UPDATE RECRUIT
				SET RECRUIT_STATUS = 0
				WHERE RECRUIT_NO = #{targetNo}
			</when>
			<when test="targetType == 'BOARD'">
				UPDATE BOARD
				SET BOARD_STATUS = 0
				WHERE BOARD_NO = #{targetNo}
			</when>
			<when test="targetType == 'COMMENT'">
				UPDATE "COMMENT"
				SET COMMENT_STATUS = 0
				WHERE COMMENT_NO = #{targetNo}
			</when>
		</choose>
	</update>

</mapper>