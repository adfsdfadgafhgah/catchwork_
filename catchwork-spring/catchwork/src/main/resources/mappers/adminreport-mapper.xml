<!-- src/main/resources/mappers/AdminMapper.xml -->
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.admin.model.mapper.AdminReportMapper">
	
	<!-- 동적 검색 필터 -->
 	<sql id="searchCondition">
        <where>
            <if test="targetType != null and targetType != ''">AND R.REPORT_TARGET_TYPE = #{targetType}</if>
            <if test="status != null and status != ''">AND R.REPORT_STATUS = #{status}</if>
            <if test="startDate != null and startDate != ''">AND R.REPORT_DATE >= TO_DATE(#{startDate}, 'YYYY-MM-DD')</if>
            <if test="endDate != null and endDate != ''">AND R.REPORT_DATE &lt;= TO_DATE(#{endDate}, 'YYYY-MM-DD') + 1</if>
            <if test="query != null and query != ''">
                AND (
                    M.MEM_NICKNAME LIKE '%' || #{query} || '%' OR
                    B.BOARD_TITLE LIKE '%' || #{query} || '%' OR
                    C.COMMENT_CONTENT LIKE '%' || #{query} || '%' OR
                    CI.CORP_NAME LIKE '%' || #{query} || '%' OR
                    RC.RECRUIT_TITLE LIKE '%' || #{query} || '%'
                )
            </if>
        </where>
    </sql>
  
    <!-- 신고 요약 정보 조회 -->
    <select id="getReportSummary" parameterType="ReportSearchCriteria" resultType="com.example.demo.admin.model.dto.ReportSummary">
        SELECT
            COUNT(*) AS totalReports,
            COUNT(CASE WHEN R.REPORT_STATUS = 'N' THEN 1 END) AS unprocessedCount,
            COUNT(DISTINCT R.REPORT_TARGET_NO || '-' || R.REPORT_TARGET_TYPE) AS uniqueTargets
        FROM REPORT R
        LEFT JOIN "MEMBER" M ON R.MEM_NO = M.MEM_NO
        <include refid="searchCondition"/>
    </select>
	
	<!-- 신고 처리 상태 변경 -->
	<update id="updateReportStatusToComplete" parameterType="com.example.demo.report.model.dto.Report">
        UPDATE REPORT
           SET REPORT_STATUS = 'Y'
         WHERE REPORT_NO = #{reportNo}
           AND REPORT_STATUS = 'N'
    </update>
    
    <!-- 그룹화 된 신고 목록 조회 -->
    <select id="getGroupedReportList" parameterType="ReportSearchCriteria" 
           resultType="com.example.demo.admin.model.dto.ReportList">
       SELECT * FROM (
           SELECT ROWNUM AS rnum, A.* FROM (
               SELECT
                   R.REPORT_TARGET_NO AS reportTargetNo,
                   R.REPORT_TARGET_TYPE AS reportTargetType,
                   MAX(COALESCE(
                       TO_NCHAR(B.BOARD_TITLE), 
                       TO_NCHAR(C.COMMENT_CONTENT), 
                       TO_NCHAR(CI.CORP_NAME), 
                       TO_NCHAR(RC.RECRUIT_TITLE)
                   )) KEEP (DENSE_RANK FIRST ORDER BY R.REPORT_DATE DESC) AS reportContent,
                   COUNT(*) AS reportCount,
                   MAX(R.REPORT_DATE) AS latestReportDate,
                   MIN(R.REPORT_STATUS) AS overallStatus
               FROM 
                   REPORT R
                   LEFT JOIN "MEMBER" M ON R.MEM_NO = M.MEM_NO
                   LEFT JOIN BOARD B ON R.REPORT_TARGET_NO = B.BOARD_NO AND R.REPORT_TARGET_TYPE = 'BOARD'
                   LEFT JOIN "COMMENT" C ON R.REPORT_TARGET_NO = C.COMMENT_NO AND R.REPORT_TARGET_TYPE = 'COMMENT'
                   LEFT JOIN CORP_INFO CI ON R.REPORT_TARGET_NO = TO_CHAR(CI.CORP_NO) AND R.REPORT_TARGET_TYPE = 'COMPANY'
                   LEFT JOIN RECRUIT RC ON R.REPORT_TARGET_NO = RC.RECRUIT_NO AND R.REPORT_TARGET_TYPE = 'RECRUIT'
               <include refid="searchCondition"/>
               GROUP BY R.REPORT_TARGET_NO, R.REPORT_TARGET_TYPE
               ORDER BY latestReportDate DESC
           ) A
           WHERE ROWNUM &lt;= #{endRow}
       )
       WHERE rnum >= #{startRow}
   </select>
    
    <!-- 그룹화 된 신고의 총 건수 -->
    <select id="getGroupedReportTotalCount" parameterType="ReportSearchCriteria" resultType="int">
        SELECT COUNT(*) FROM (
            SELECT 1
            FROM REPORT R
            LEFT JOIN "MEMBER" M ON R.MEM_NO = M.MEM_NO
            LEFT JOIN BOARD B ON R.REPORT_TARGET_NO = B.BOARD_NO AND R.REPORT_TARGET_TYPE = 'BOARD'
            LEFT JOIN "COMMENT" C ON R.REPORT_TARGET_NO = C.COMMENT_NO AND R.REPORT_TARGET_TYPE = 'COMMENT'
            LEFT JOIN CORP_INFO CI ON R.REPORT_TARGET_NO = TO_CHAR(CI.CORP_NO) AND R.REPORT_TARGET_TYPE = 'COMPANY'
            LEFT JOIN RECRUIT RC ON R.REPORT_TARGET_NO = RC.RECRUIT_NO AND R.REPORT_TARGET_TYPE = 'RECRUIT'
            <include refid="searchCondition"/>
            GROUP BY R.REPORT_TARGET_NO, R.REPORT_TARGET_TYPE
        )
    </select>
    
</mapper>
